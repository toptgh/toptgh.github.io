{"title":"HTML基础2","slug":"day02css基础","date":"2017-01-02T10:00:00.000Z","updated":"2018-11-26T04:04:05.517Z","comments":true,"excerpt":"","content":"\n<body>\n<div class=\"boxs\">\n\t<h1>DAY2：CSS基础</h1>\n    <h2 class=\"borderbtm\">学习目标</h2>\n    <ul>\n    \t<li>1、CSS简介</li>\n    \t<li>2、CSS语法</li>\n    \t<li>3、样式的创建</li>\n    \t<li>4、两种引入外部样式表的区别</li>\n    \t<li>5、样式表的优先级和作用域</li>\n    \t<li>6、CSS选择器</li>\n    \t<li>7、选择器的权重</li>\n    \t<li>8、浮动属性的简单应用</li>\n    \t<li>9、HTML、CSS注释</li>\n    </ul>\n    <h3>一、CSS简介</h3>\n    <div class=\"marleft\">\n      <p>英文全名：cascading  style  sheets(百度百科) === cascading  style  sheet</p>\n      <p>css汉译：层叠样式表；<br>\n      层叠样式表,WEB标准中的表现标准语言,表现标准语言在网页中主要对网页信息的显示进行控制，简单说就是如何修饰网页信息的显示样式。<br>\n      目前推荐遵循的是W3C发布的CSS3.0.<br>\n      用来表现XHTML或者XML等样式文件的计算机语言。<br>\n    1998年5月21日由w3C正式推出的css2.0</p>\n    </div>\n    <h3>二、CSS语法</h3>\n    <div class=\"marleft\">\n      <p>html语法：&lt;标记 属性=“属性值”&nbsp;&nbsp; 属性=“属性值”&gt;&lt;/标记&gt;</p>\n      <p>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;标记 属性=“属性值”&nbsp;&nbsp; 属性=“属性值”/&gt;</p>\n      <p>&nbsp;</p>\n      <p>CSS语法：选择符{属性：属性值；属性：属性值；}<br>\n      <img src=\"images/pic1.png\"><br>\n     <strong class=\"oo\"> 选择符表示要定义样式的对象，可以是元素本身，也可以是一类元素或者制定名称的元素.<br>\n      属性：属性是指定选择符所具有的属性，它是css的核心，css2共有150多个属性<br>\n      属性值：属性值包括法定属性值及常见的数值加单位，如25px，或颜色值等。</strong></p>\n <p style=\"color:#aaa\">合并相邻单元格边框</p>\n <p style=\"color:#aaa\">border-collapse:(边框分开)/collapse(边框合并)</p>\n <p style=\"color:#aaa\">resize:none;</p>\n <p style=\"color:#aaa\">&nbsp;</p>\n <p><strong class=\"oo\">CSS语法：选择符{</strong></p>\n <p><strong class=\"oo\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;属性：属性值；</strong></p>\n <p><strong class=\"oo\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;属性：属性值；</strong></p>\n <p><strong class=\"oo\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;属性：属性值&nbsp;&nbsp;&nbsp;属性值&nbsp;&nbsp;属性值；</strong></p>\n <p><strong class=\"oo\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\n      </strong>\n        说明：<br>\n        1）每个CSS样式由两部分组成，即选择符和声明，声明又分为属性和属性值；<br>\n        2）属性必须放在花括号中，属性与属性值用冒号连接。<br>\n        3）每条声明用分号结束。<br>\n        4）当一个属性有多个属性值的时候，属性值与属性值不分先后顺序。<br>\n        5）在书写样式过程中，空格、换行等操作不影响属性显示。<br>\n      </p>\n  </div>\n    <h3>三、样式的创建(内部样式   外部样式   内联样式)、两种引入外部样式表的区别</h3>\n    <div class=\"marleft\">\n      <p>A、内部样式 </p>\n      <blockquote class=\"textcon\">\n      <p>语法：<br>\n        &lt;style type=&quot;text/css&quot;&gt;<br>\n        /*css语句*/<br>\n  &lt;/style&gt;      </p>\n      <p class=\"oo\"> 注：使用style标记创建样式时，最好将该标记写在&lt;head&gt;&lt;/head&gt;;</p>\n    \n      <p></p>\n      </blockquote>\n      <p>B、外部样式 <br>\n      <blockquote class=\"textcon\">\n        <p>*方法一：外部样式表的创建：<br>\n          &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;目标文件的路径及文件名全称&quot; /&gt;<br>\n          说明：<br>\n          使用link元素导入外部样式表时，需将该元素写在文档头部，即&lt;head&gt;与&lt;/head&gt;之间。<br>\n          rel（relation）：用于定义文档关联，表示关联样式表；<br>\n        type：定义文档类型；</p>\n      </blockquote></p>\n      <blockquote class=\"textcon\">\n      <p>*方法二：外部样式表的导入<br>\n        &lt;style type=&quot;text/css&quot;&gt;<br>\n@import url(目标文件的路径及文件名全称);<br>\n&lt;/style&gt;<br>\n        <strong class=\"oo\">注：@和import之间没有空格 url和小括号之间也没有空格；必须结尾以分号结束；</strong>      </p>\n      </blockquote>\n      <p>C、内联样式 （行间样式，行内样式，嵌入式样式）</p>\n      <blockquote class=\"textcon\">\n      <p>语法：&lt;标签    style=&quot;属性：属性值;属性:属性值;&quot;&gt;&lt;/标签&gt;</p>\n      </blockquote>\n    </div>\n    <h3>四、两种引入外部样式表link和import之间的区别</h3>\n    <div class=\"marleft\">\n      <p class=\"other\">扩展知识点：link和import导入外部样式的区别：</p>\n      <blockquote class=\"textcon\">\n      <p><strong class=\"oo\">差别1：本质的差别：</strong>link属于XHTML标签，而@import完全是CSS提供的一种方式。 </p>\n      <p><strong class=\"oo\">差别2：加载顺序的差别：</strong>当一个页面被加载的时候（就是被浏览者浏览的时候），link引用的CSS会同时被加载，而@import引用的CSS会等到页面全部被下载完再被加载。所以有时候浏览@import加载CSS的页面时开始会没有样式（就是闪烁）。<br>\n        <strong class=\"oo\">差别3：兼容性的差别：</strong>@import是CSS2.1提出的，所以老的浏览器不支持，@import只有在IE5以上的才能识别，而link标签无此问题。<br>\n     <strong class=\"oo\"> 差别4：使用dom(document  object model文档对象模型 )控制样式时的差别</strong>：当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的.    </p>\n    </blockquote></div>\n    <h3>五、样式表的优先级</h3>\n    <div class=\"marleft\">\n      <p>A、内联样式表的优先级别最高<br>\n      B、内部样式表与外部样式表的优先级和书写的顺序有关，后书写的优先级别高。<br>\n      </p>\n    </div>\n    <h3>六、CSS选择符（选择器）</h3>\n    <div class=\"marleft\">\n      <p>CSS选择符包括4大类：类型选择符、id选择符、class选择符(类选择符)、特殊选择符；      </p>\n      <p>常用的选择符有十种左右<br>\n       类型选择符，id选择符，class选择符，通配符，群组选择符，包含选择符，伪类选择符(伪类选择符CSS中已经定义好的选择器,不能随便取名)，伪元素选择符(设置在对象后发生的内容。用来和content属性一起使用  )      </p>\n      <p class=\"oo oos\">1） 元素选择符/类型选择符（element选择器\t)</p>\n      <blockquote class=\"textcon\">\n      <p>语法：元素名称{属性：属性值；}</p>\n      <p>p  h1  div  span a body      </p>\n      <p>说明：</p>\n      <p>a)元素选择符就是以文档语言对象类型作为选择符，即使用结构中元素名称作为选择符。例如body、div、p,img,em,strong,span......等。</p>\n      <p>b)所有的页面元素都可以作为选择符;</p>\n      <p>用法：<br>\n        1)如果想改变某个元素得默认样式时，可以使用类型选择符；<br>\n      （如：改变一个div、p、h1样式）</p>\n      <p>2) 当统一文档某个元素的显示效果时，可以使用类型选择符<br>\n      （如：改变文档所有p段落样式）</p>\n      </blockquote>\n      <p class=\"oo oos\">2) id选择器</p>\n      <blockquote class=\"textcon\">\n      <p>语法：#id名{属性：属性值;}</p>\n      <p>        说明：<br>\n        A）当我们使用id选择符时，应该为每个元素定义一个id属性<br>\n        如：&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;<br>\n        B）id选择符的语法格式是“#”加上自定义的id名<br>\n      如：#box{width:300px; height:300px;}</p>\n      <p>C)  起名时要取英文名，不能用关键字：(所有的标记和属性都是关键字)<br>\n        如：head标记<br>\n        D）一个id名称只能对应文档中一个具体的元素对象，因为id只能定义页面中某一个唯一的元素对象。<br>\n      E)   最大的用处：创建网页的外围结构。</p></blockquote>\n      <p><strong class=\"oo oos\">3）class选择器</strong><br>\n      <blockquote class=\"textcon\">\n        <p>语法：.class名{属性：属性值;}<br>\n        说明：<br>\n        A）当我们使用class选择符时，应先为每个元素定义一个类名称<br>\n        B）class选择符的语法格式是：&quot;如：&lt;div class=&quot;top&quot;&gt;&lt;/div&gt;&quot;<br>\n      用法：class选择符更适合定义一类样式；</p>\n      </blockquote></p>\n      <p><strong class=\"oo oos\">4)*通配符</strong><br>\n      <blockquote class=\"textcon\">\n        <p>语法：*{属性：属性值；}<br>\n        说明：通配选择符的写法是“*”，其含义就是所有元素。<br>\n        用法：常用来重置样式。        </p>\n      </blockquote>\n       <strong class=\"oo oos\"> 5）群组选择器</strong><br>\n       <blockquote class=\"textcon\">\n         <p>语法：选择符1，选择符2，选择符3{属性：属性值;}<br>\n           说明：当有多个选择符应用相同的样式时，可以将选择符用“，”分隔的方式，合并为一组。</p>\n         </blockquote></p>\n         <p>作用：提取同分类项      </p>\n      \n      <p><strong class=\"oo oos\"> 6） 包含选择器</strong><br>\n      <blockquote class=\"textcon\">\n        <p>语法：选择符1&nbsp;    选择符2{属性：属性值;}<br>\n          说明：选择符1和选择符2用空格隔开，含义就是选择符1中包含的所有选择符2;<br>\n          用法：当我的元素存在父级元素的时候，我要改变自己本身的样式，可以不另加选择符，直接用包含选择器的方式解决。<br>\n        </p>\n      </blockquote>\n<strong class=\"oo oos\">7） 伪类选择器(伪类选择符)</strong><br>\n<blockquote class=\"textcon\">\n  <p>语法 ：<br>\n    :link{属性：属性值;}超链接的初始状态;<br>\n    :visited{属性：属性值;}超链接被访问后的状态;<br>\n    :hover{属性：属性值;}鼠标悬停，即鼠标划过超链接时的状态;<br>\n    :active{属性：属性值;}超链接被激活时的状态，即鼠标按下时超链接的状态;<br>\n    <strong class=\"oo\">要让他们遵守一个爱恨原则LoVe/HAte,也就是Link--visited--hover--active。</strong><br>\n    说明：<br>\n    A）当这4个超链接伪类选择符联合使用时，应注意他们的顺序，正常顺序为：<br>\n    a:link,a:visited,a:hover,a:active,错误的顺序有时会使超链接的样式失效；<br>\n    B）为了简化代码，可以把伪类选择符中相同的声明提出来放在a选择符中；<br>\n    例如：a{color:red;}     a:hover{color:green;} 表示超链接的三种状态都相同，只有鼠标划过变颜色。 <br>\n  </p>\n</blockquote>\n    </p></div>\n    <h3>七、CSS选择符的权重</h3>\n    <div class=\"marleft\">css中用四位数字表示权重，权重的表达方式如：0，0，0，0<br>\n      类型选择符的权重为0001<br>\n      class选择符的权重为0010<br>\n      id选择符的权重为0100<br>\n      子选择符的权重为0000<br>\n      属性选择符的权重为0010<br>\n      伪类选择符的权重为0010  <br>\n      伪元素选择符的权重为0001<br>\n      包含选择符的权重：为包含选择符的权中之和<br>\n      内联样式的权重为1000<br>\n      继承样式的权重为0000\n      <blockquote class=\"textcon\">\n      <p><strong class=\"oo\">*    当不同选择符的样式设置有冲突的时候，高权重选择\n        符的样式会覆盖低权重选择符的样式。</strong></p>\n      <p>例如：b.demo的权重是1+10=11<br>\n        .demo的权重是10</p>\n      <p>&lt;b class=&quot;demo&quot;&gt;&lt;/b&gt;<br>\n        所以经常会发生.demo的样式失效</p>\n      <p class=\"oo\">*     相同权重的选择符，样式遵循就近原则：哪个选择符最后定义，就采用哪个选择符样式。</p>\n      <p class=\"oo\">（注意：是css样式中定义该选择符的先后，而不是html中使用先后）</p>\n      <p></p></blockquote>\n      <br>\n    </div>\n    <h3>八、浮动属性的简单应用</h3>\n    <div class=\"marleft\">\n    \n      <p>语法：float:none/left/right;</p>\n      <p>float:定义网页中其它文本如何环绕该元素显示 <br>\n        浮动的目的：就是让竖着的东西横着来 <br>\n        有三个取值：<br>\n        left:元素活动浮动在文本左面<br>\n        right:元素浮动在右面<br>\n        none:默认值，不浮动。<br>\n  </p></div>\n    <h3>九、页面中的注释</h3>\n    <div class=\"marleft\">\n   \t<strong class=\"other\"> 扩展知识点：</strong><br>\n    \tHtml注释<br>\n      &lt;!-- 我是div的页面注释  --&gt;<br>\n      css的注释<br>\n      /* 我是css的注释  */<br>\n      <br>\n  </div>\n     \n</div>\n<div style=\"     width: 130px;\n    height: 45px;\n    line-height: 44px;\n    text-align: center;\n    color: rgb(17, 16, 16);\n    background: rgb(175, 218, 253);\n    border-radius: 50%;\n    position: fixed;\n    bottom: 0px;\n    cursor:pointer;\n    right: 15px; \"><a href=\"#\" style=\"color:rgb(15, 14, 14); text-decoration:none;\">返回顶部</a></div>\n<br>\n<br>\n<br>\n<br>\n<script src=\"/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"debug\":false,\"model\":{\"scale\":1,\"jsonPath\":\"/live2dw/assets/koharu.model.json\"},\"display\":{\"superSample\":2,\"width\":80,\"height\":280,\"position\":\"right\",\"hOffset\":0,\"vOffset\":-150},\"mobile\":{\"show\":true,\"scale\":0.5},\"react\":{\"opacityDefault\":1,\"opacityOnHover\":0.8},\"log\":false});</script></body>\n\n","categories":[],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]}